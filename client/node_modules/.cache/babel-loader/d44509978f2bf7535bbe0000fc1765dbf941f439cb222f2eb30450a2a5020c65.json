{"ast":null,"code":"var _jsxFileName = \"D:\\\\suduko\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios for credentials\n  axios.defaults.withCredentials = true;\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await axios.get('/api/auth/user');\n      setUser(response.data.user);\n    } catch (error) {\n      // User not authenticated\n      setUser(null);\n    }\n    setLoading(false);\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/login', {\n        username,\n        password\n      });\n\n      // Handle both JWT and session-based responses\n      if (response.data.token) {\n        // JWT-based response\n        const {\n          token,\n          user\n        } = response.data;\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        setUser(user);\n      } else if (response.data.user) {\n        // Session-based response\n        setUser(response.data.user);\n      } else {\n        // Check if user is authenticated via session\n        await checkAuthStatus();\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed'\n      };\n    }\n  };\n  const register = async (username, password, email) => {\n    try {\n      const response = await axios.post('/api/register', {\n        username,\n        password,\n        email\n      });\n\n      // Check if response contains token (JWT) or user (session-based)\n      if (response.data.token) {\n        // JWT-based response\n        const {\n          token,\n          user\n        } = response.data;\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        setUser(user);\n      } else if (response.data.user) {\n        // Session-based response\n        setUser(response.data.user);\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n      // Clear any stored tokens\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Clear local state even if server request fails\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n    }\n  };\n  const loginWithGoogle = () => {\n    window.location.href = '/api/auth/google';\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loginWithGoogle,\n    loading,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","defaults","withCredentials","checkAuthStatus","response","get","data","error","login","username","password","post","token","localStorage","setItem","headers","common","success","_error$response","_error$response$data","console","register","email","_error$response2","_error$response2$data","logout","removeItem","loginWithGoogle","window","location","href","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/suduko/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios for credentials\n  axios.defaults.withCredentials = true;\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const response = await axios.get('/api/auth/user');\n      setUser(response.data.user);\n    } catch (error) {\n      // User not authenticated\n      setUser(null);\n    }\n    setLoading(false);\n  };\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/login', { username, password });\n      \n      // Handle both JWT and session-based responses\n      if (response.data.token) {\n        // JWT-based response\n        const { token, user } = response.data;\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        setUser(user);\n      } else if (response.data.user) {\n        // Session-based response\n        setUser(response.data.user);\n      } else {\n        // Check if user is authenticated via session\n        await checkAuthStatus();\n      }\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Login error:', error);\n      return { \n        success: false, \n        error: error.response?.data?.error || 'Login failed' \n      };\n    }\n  };\n\n  const register = async (username, password, email) => {\n    try {\n      const response = await axios.post('/api/register', { username, password, email });\n      \n      // Check if response contains token (JWT) or user (session-based)\n      if (response.data.token) {\n        // JWT-based response\n        const { token, user } = response.data;\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        setUser(user);\n      } else if (response.data.user) {\n        // Session-based response\n        setUser(response.data.user);\n      }\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { \n        success: false, \n        error: error.response?.data?.error || 'Registration failed' \n      };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n      // Clear any stored tokens\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Clear local state even if server request fails\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n    }\n  };\n\n  const loginWithGoogle = () => {\n    window.location.href = '/api/auth/google';\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loginWithGoogle,\n    loading,\n    checkAuthStatus\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}